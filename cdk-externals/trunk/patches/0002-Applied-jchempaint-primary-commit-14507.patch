From a60b8e7377833551c642eee6b93199402ee99a87 Mon Sep 17 00:00:00 2001
From: egonw <egonw@fcb5ba71-d80d-0410-8237-ba3920747fcc>
Date: Tue, 5 May 2009 13:18:10 +0000
Subject: [PATCH] Applied jchempaint-primary commit 14507

git-svn-id: https://bioclipse.svn.sourceforge.net/svnroot/bioclipse/bioclipse2/trunk@10071 fcb5ba71-d80d-0410-8237-ba3920747fcc
---
 .../openscience/cdk/geometry/GeometryTools.java    |   28 ++++++++++++++++++++
 1 files changed, 28 insertions(+), 0 deletions(-)

diff --git a/cdk-externals/trunk/org.openscience.cdk.standard/src/org/openscience/cdk/geometry/GeometryTools.java b/cdk-externals/trunk/org.openscience.cdk.standard/src/org/openscience/cdk/geometry/GeometryTools.java
index 3103c5e..9a8c0fd 100644
--- a/cdk-externals/trunk/org.openscience.cdk.standard/src/org/openscience/cdk/geometry/GeometryTools.java
+++ b/cdk-externals/trunk/org.openscience.cdk.standard/src/org/openscience/cdk/geometry/GeometryTools.java
@@ -38,6 +38,7 @@ import javax.vecmath.Point3d;
 import javax.vecmath.Vector2d;
 import javax.vecmath.Vector3d;
 import java.awt.*;
+import java.awt.geom.Rectangle2D;
 import java.util.*;
 import java.util.List;
 
@@ -1452,4 +1453,31 @@ public class GeometryTools {
         }
 		return bondLengthSum / bondCounter;
 	}
+	
+	
+    /**
+     * Shift the container so that it does not overlap with the previous.
+     * XXX this is a very crude layout technique!
+     * @param container the atom container to shift
+     * @param bounds the bounds of the atom container to shift
+     * @param last the bounds of the last atom container
+     */
+    public static Rectangle2D shiftContainer(
+            IAtomContainer container, Rectangle2D bounds, Rectangle2D last, double gap) {
+
+        if (bounds.intersects(last)) {
+
+            // XXX always displace across width - could be improved
+            double d = bounds.getWidth() + last.getWidth() + gap;
+
+            Point2d p = new Point2d(last.getCenterX() + d, last.getCenterY());
+            GeometryTools.translate2DCenterTo(container, p);
+            return new Rectangle2D.Double(bounds.getX() + d,
+                                          bounds.getY(),
+                                          bounds.getWidth(),
+                                          bounds.getHeight());
+        } else {
+            return bounds;
+        }
+    }
 }
-- 
1.6.0.4

